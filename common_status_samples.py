import pickle

manipulation = {"Инвазивные": ["Блокада триггерной точки с дипроспаном 2,0 мл и растворои Лидокаина 2% 2,0 мл.",
                            "Пункция сустава.",
                            "Интроартикулярное введение гиалуроновой кислоты 2,0 мл."
                            ],
                "Неинвазивные": ["Наложение фиксирующей повязки.", "Наложение гипсовой лонгеты.", "Фиксация сустава с помощью ортеза."]
            
            }

diagnosis= {}

appointment = {"Лабораторные": ["Общий анализ крови", "Общий анализ мочи", "Биохимический анализ крови"],
                "Инструментальные": ["Рентгенография", "МРТ", "КТ", "УЗИ", "ЭНМГ"],
            }

recomendation = {"Медикаментозно": ["Интроартикулярное введение препаратов гиалуроновой кислоты (натрия гиалуронат – Гиларт, гоу-он, гиал-син) 3-х кратно через 1 неделю.", 
                                    "PRP (обогащенная тромбоцитами плазма) - 3-х кратно через 1 неделю.",
                                    "Табл. Мелоксикам 15 мг по 1 таблетке 1 раз в день 10-12 дней.",
                                    "Курс хондропротекторов Хондроитин сульфат 10% - 2,0 мл в/м 30 инъекций через день (первые 4 инъекции по 1 мл, при хорошей переносимости далее по 2,0 мл).", 
                                    "Курс Глюкозамина (ДОНА) в порошках по 1,5 г 1 раз в день 5 недель. Можно повторить через 6-12 месяцев после окончания.",
                                    ],
                "Иммобилизация": ["Иммобилизация ортезом средней степени фиксации.", "Иммобилизация ортезом жесткой степени фиксации.", "Иммобилизация гипсовой лонгетой.", "Иммобилизация циркулярной гипосовой повязкой."],
                "Физиотерапия":["ЛФК", "Магнитотерапапия", "Электрофорез с новокаином и KJ", "Электрофорез с эуфиллином"],
                
            }
with open('samples_manipulation.pickle', 'wb') as f:
            pickle.dump(manipulation, f)



with open('samples_diagnosis.pickle', 'wb') as f:
            pickle.dump(diagnosis, f)

with open('samples_appointment.pickle', 'wb') as f:
            pickle.dump(appointment, f)

with open('samples_recomendation.pickle', 'wb') as f:
            pickle.dump(recomendation, f)
